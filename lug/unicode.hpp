// lug - Embedded DSL for PE grammar parser combinators in C++
// Copyright (c) 2017 Jesse W. Towner
// See LICENSE.md file for license details

// This header file is generated by the makeunicode tool program.
// Do not modify this file by hand. Instead, modify and run the
// tool to regenerate this file.

#ifndef LUG_UNICODE_HPP__
#define LUG_UNICODE_HPP__

#include <cstddef>
#include <cstdint>
#include <array>
#include <iterator>
#include <limits>
#include <memory>

namespace lug::unicode
{

// POSIX compatability properties
enum class ctype : std::uint_least16_t
{
	alpha    = UINT16_C(1) <<  0,
	lower    = UINT16_C(1) <<  1,
	upper    = UINT16_C(1) <<  2,
	punct    = UINT16_C(1) <<  3,
	digit    = UINT16_C(1) <<  4,
	xdigit   = UINT16_C(1) <<  5,
	alnum    = UINT16_C(1) <<  6,
	space    = UINT16_C(1) <<  7,
	blank    = UINT16_C(1) <<  8,
	cntrl    = UINT16_C(1) <<  9,
	graph    = UINT16_C(1) << 10,
	print    = UINT16_C(1) << 11,
	word     = UINT16_C(1) << 12,
	none     = 0
};

constexpr ctype operator~(ctype x) noexcept { return static_cast<ctype>(~static_cast<std::uint_least16_t>(x)); }
constexpr ctype operator&(ctype x, ctype y) noexcept { return static_cast<ctype>(static_cast<std::uint_least16_t>(x) & static_cast<std::uint_least16_t>(y)); }
constexpr ctype operator|(ctype x, ctype y) noexcept { return static_cast<ctype>(static_cast<std::uint_least16_t>(x) | static_cast<std::uint_least16_t>(y)); }
constexpr ctype operator^(ctype x, ctype y) noexcept { return static_cast<ctype>(static_cast<std::uint_least16_t>(x) ^ static_cast<std::uint_least16_t>(y)); }
inline ctype operator&=(ctype& x, ctype y) noexcept { return (x = x & y); }
inline ctype operator|=(ctype& x, ctype y) noexcept { return (x = x | y); }
inline ctype operator^=(ctype& x, ctype y) noexcept { return (x = x ^ y); }

// Unicode binary properties
enum class ptype : std::uint_least64_t
{
	Any                                  = UINT64_C(1) <<  0,
	Ascii                                = UINT64_C(1) <<  1,
	Assigned                             = UINT64_C(1) <<  2,
	White_Space                          = UINT64_C(1) <<  3,
	Bidi_Control                         = UINT64_C(1) <<  4,
	Join_Control                         = UINT64_C(1) <<  5,
	Dash                                 = UINT64_C(1) <<  6,
	Quotation_Mark                       = UINT64_C(1) <<  7,
	Terminal_Punctuation                 = UINT64_C(1) <<  8,
	Other_Math                           = UINT64_C(1) <<  9,
	Hex_Digit                            = UINT64_C(1) << 10,
	Other_Alphabetic                     = UINT64_C(1) << 11,
	Ideographic                          = UINT64_C(1) << 12,
	Diacritic                            = UINT64_C(1) << 13,
	Extender                             = UINT64_C(1) << 14,
	Other_Lowercase                      = UINT64_C(1) << 15,
	Other_Uppercase                      = UINT64_C(1) << 16,
	Noncharacter_Code_Point              = UINT64_C(1) << 17,
	Other_Grapheme_Extend                = UINT64_C(1) << 18,
	IDS_Binary_Operator                  = UINT64_C(1) << 19,
	IDS_Ternary_Operator                 = UINT64_C(1) << 20,
	Radical                              = UINT64_C(1) << 21,
	Unified_Ideograph                    = UINT64_C(1) << 22,
	Other_Default_Ignorable_Code_Point   = UINT64_C(1) << 23,
	Soft_Dotted                          = UINT64_C(1) << 24,
	Logical_Order_Exception              = UINT64_C(1) << 25,
	Other_ID_Start                       = UINT64_C(1) << 26,
	Other_ID_Continue                    = UINT64_C(1) << 27,
	Sentence_Terminal                    = UINT64_C(1) << 28,
	Variation_Selector                   = UINT64_C(1) << 29,
	Pattern_White_Space                  = UINT64_C(1) << 30,
	Pattern_Syntax                       = UINT64_C(1) << 31,
	Prepended_Concatenation_Mark         = UINT64_C(1) << 32,
	Regional_Indicator                   = UINT64_C(1) << 33,
	Lowercase                            = UINT64_C(1) << 34,
	Uppercase                            = UINT64_C(1) << 35,
	Cased                                = UINT64_C(1) << 36,
	Case_Ignorable                       = UINT64_C(1) << 37,
	Changes_When_Lowercased              = UINT64_C(1) << 38,
	Changes_When_Uppercased              = UINT64_C(1) << 39,
	Changes_When_Titlecased              = UINT64_C(1) << 40,
	Changes_When_Casefolded              = UINT64_C(1) << 41,
	Changes_When_Casemapped              = UINT64_C(1) << 42,
	Alphabetic                           = UINT64_C(1) << 43,
	Default_Ignorable_Code_Point         = UINT64_C(1) << 44,
	Grapheme_Base                        = UINT64_C(1) << 45,
	Grapheme_Extend                      = UINT64_C(1) << 46,
	Math                                 = UINT64_C(1) << 47,
	ID_Start                             = UINT64_C(1) << 48,
	ID_Continue                          = UINT64_C(1) << 49,
	XID_Start                            = UINT64_C(1) << 50,
	XID_Continue                         = UINT64_C(1) << 51,
	None                                 = 0
};

constexpr ptype operator~(ptype x) noexcept { return static_cast<ptype>(~static_cast<std::uint_least64_t>(x)); }
constexpr ptype operator&(ptype x, ptype y) noexcept { return static_cast<ptype>(static_cast<std::uint_least64_t>(x) & static_cast<std::uint_least64_t>(y)); }
constexpr ptype operator|(ptype x, ptype y) noexcept { return static_cast<ptype>(static_cast<std::uint_least64_t>(x) | static_cast<std::uint_least64_t>(y)); }
constexpr ptype operator^(ptype x, ptype y) noexcept { return static_cast<ptype>(static_cast<std::uint_least64_t>(x) ^ static_cast<std::uint_least64_t>(y)); }
inline ptype operator&=(ptype& x, ptype y) noexcept { return (x = x & y); }
inline ptype operator|=(ptype& x, ptype y) noexcept { return (x = x | y); }
inline ptype operator^=(ptype& x, ptype y) noexcept { return (x = x ^ y); }

// Unicode general categories
enum class gctype : std::uint_least32_t
{
	Ll = UINT32_C(1) <<  0,    // Lowercase_Letter
	Lm = UINT32_C(1) <<  1,    // Modifier_Letter
	Lo = UINT32_C(1) <<  2,    // Other_Letter
	Lt = UINT32_C(1) <<  3,    // Titlecase_Letter
	Lu = UINT32_C(1) <<  4,    // Uppercase_Letter
	Mc = UINT32_C(1) <<  5,    // Spacing_Mark
	Me = UINT32_C(1) <<  6,    // Enclosing_Mark
	Mn = UINT32_C(1) <<  7,    // Nonspacing_Mark
	Nd = UINT32_C(1) <<  8,    // Decimal_Number
	Nl = UINT32_C(1) <<  9,    // Letter_Number
	No = UINT32_C(1) << 10,    // Other_Number
	Pc = UINT32_C(1) << 11,    // Connector_Punctuation
	Pd = UINT32_C(1) << 12,    // Dash_Punctuation
	Pe = UINT32_C(1) << 13,    // Close_Punctuation
	Pf = UINT32_C(1) << 14,    // Final_Punctuation
	Pi = UINT32_C(1) << 15,    // Initial_Punctuation
	Po = UINT32_C(1) << 16,    // Other_Punctuation
	Ps = UINT32_C(1) << 17,    // Open_Punctuation
	Sc = UINT32_C(1) << 18,    // Currency_Symbol
	Sk = UINT32_C(1) << 19,    // Modifier_Symbol
	Sm = UINT32_C(1) << 20,    // Mathematical_Symbol
	So = UINT32_C(1) << 21,    // Other_Symbol
	Zl = UINT32_C(1) << 22,    // Line_Separator
	Zp = UINT32_C(1) << 23,    // Paragraph_Separator
	Zs = UINT32_C(1) << 24,    // Space_Separator
	Cc = UINT32_C(1) << 25,    // Control
	Cf = UINT32_C(1) << 26,    // Format
	Cn = UINT32_C(1) << 27,    // Unassigned
	Co = UINT32_C(1) << 28,    // Private_Use
	Cs = UINT32_C(1) << 29,    // Surrogate
	C  = Cc|Cf|Cn|Co|Cs,       // Other
	L  = Lu|Ll|Lt|Lm|Lo,       // Letter
	LC = Lu|Ll|Lt,             // Cased_Letter
	M  = Mc|Me|Mn,             // Mark
	N  = Nd|Nl|No,             // Number
	P  = Pc|Pd|Pe|Pf|Pi|Po|Ps, // Punctuation
	S  = Sc|Sm|Sk|So,          // Symbol
	Z  = Zl|Zp|Zs,             // Separator
	Lowercase_Letter         = Ll,
	Modifier_Letter          = Lm,
	Other_Letter             = Lo,
	Titlecase_Letter         = Lt,
	Uppercase_Letter         = Lu,
	Spacing_Mark             = Mc,
	Enclosing_Mark           = Me,
	Nonspacing_Mark          = Mn,
	Decimal_Number           = Nd,
	Letter_Number            = Nl,
	Other_Number             = No,
	Connector_Punctuation    = Pc,
	Dash_Punctuation         = Pd,
	Close_Punctuation        = Pe,
	Final_Punctuation        = Pf,
	Initial_Punctuation      = Pi,
	Other_Punctuation        = Po,
	Open_Punctuation         = Ps,
	Currency_Symbol          = Sc,
	Modifier_Symbol          = Sk,
	Mathematical_Symbol      = Sm,
	Other_Symbol             = So,
	Line_Separator           = Zl,
	Paragraph_Separator      = Zp,
	Space_Separator          = Zs,
	Control                  = Cc,
	Format                   = Cf,
	Unassigned               = Cn,
	Private_Use              = Co,
	Surrogate                = Cs,
	Other                    = C,
	Letter                   = L,
	Cased_Letter             = LC,
	Mark                     = M,
	Number                   = N,
	Punctuation              = P,
	Symbol                   = S,
	Separator                = Z,
	None                     = 0
};

constexpr gctype operator~(gctype x) noexcept { return static_cast<gctype>(~static_cast<std::uint_least32_t>(x)); }
constexpr gctype operator&(gctype x, gctype y) noexcept { return static_cast<gctype>(static_cast<std::uint_least32_t>(x) & static_cast<std::uint_least32_t>(y)); }
constexpr gctype operator|(gctype x, gctype y) noexcept { return static_cast<gctype>(static_cast<std::uint_least32_t>(x) | static_cast<std::uint_least32_t>(y)); }
constexpr gctype operator^(gctype x, gctype y) noexcept { return static_cast<gctype>(static_cast<std::uint_least32_t>(x) ^ static_cast<std::uint_least32_t>(y)); }
inline gctype operator&=(gctype& x, gctype y) noexcept { return (x = x & y); }
inline gctype operator|=(gctype& x, gctype y) noexcept { return (x = x | y); }
inline gctype operator^=(gctype& x, gctype y) noexcept { return (x = x ^ y); }

// Unicode scripts
enum class sctype : std::uint_least8_t
{
	Arabic                   =   0,
	Armenian                 =   1,
	Bengali                  =   2,
	Bopomofo                 =   3,
	Braille                  =   4,
	Buginese                 =   5,
	Buhid                    =   6,
	Canadian_Aboriginal      =   7,
	Cherokee                 =   8,
	Common                   =   9,
	Coptic                   =  10,
	Cypriot                  =  11,
	Cyrillic                 =  12,
	Deseret                  =  13,
	Devanagari               =  14,
	Ethiopic                 =  15,
	Georgian                 =  16,
	Glagolitic               =  17,
	Gothic                   =  18,
	Greek                    =  19,
	Gujarati                 =  20,
	Gurmukhi                 =  21,
	Han                      =  22,
	Hangul                   =  23,
	Hanunoo                  =  24,
	Hebrew                   =  25,
	Hiragana                 =  26,
	Inherited                =  27,
	Kannada                  =  28,
	Katakana                 =  29,
	Kharoshthi               =  30,
	Khmer                    =  31,
	Lao                      =  32,
	Latin                    =  33,
	Limbu                    =  34,
	Linear_B                 =  35,
	Malayalam                =  36,
	Mongolian                =  37,
	Myanmar                  =  38,
	New_Tai_Lue              =  39,
	Ogham                    =  40,
	Old_Italic               =  41,
	Old_Persian              =  42,
	Oriya                    =  43,
	Osmanya                  =  44,
	Runic                    =  45,
	Shavian                  =  46,
	Sinhala                  =  47,
	Syloti_Nagri             =  48,
	Syriac                   =  49,
	Tagalog                  =  50,
	Tagbanwa                 =  51,
	Tai_Le                   =  52,
	Tamil                    =  53,
	Telugu                   =  54,
	Thaana                   =  55,
	Thai                     =  56,
	Tibetan                  =  57,
	Tifinagh                 =  58,
	Ugaritic                 =  59,
	Yi                       =  60,
	Balinese                 =  61,
	Cuneiform                =  62,
	Nko                      =  63,
	Phags_Pa                 =  64,
	Phoenician               =  65,
	Carian                   =  66,
	Cham                     =  67,
	Kayah_Li                 =  68,
	Lepcha                   =  69,
	Lycian                   =  70,
	Lydian                   =  71,
	Ol_Chiki                 =  72,
	Rejang                   =  73,
	Saurashtra               =  74,
	Sundanese                =  75,
	Vai                      =  76,
	Avestan                  =  77,
	Bamum                    =  78,
	Egyptian_Hieroglyphs     =  79,
	Imperial_Aramaic         =  80,
	Inscriptional_Pahlavi    =  81,
	Inscriptional_Parthian   =  82,
	Javanese                 =  83,
	Kaithi                   =  84,
	Lisu                     =  85,
	Meetei_Mayek             =  86,
	Old_South_Arabian        =  87,
	Old_Turkic               =  88,
	Samaritan                =  89,
	Tai_Tham                 =  90,
	Tai_Viet                 =  91,
	Batak                    =  92,
	Brahmi                   =  93,
	Mandaic                  =  94,
	Chakma                   =  95,
	Meroitic_Cursive         =  96,
	Meroitic_Hieroglyphs     =  97,
	Miao                     =  98,
	Sharada                  =  99,
	Sora_Sompeng             = 100,
	Takri                    = 101,
	Bassa_Vah                = 102,
	Caucasian_Albanian       = 103,
	Duployan                 = 104,
	Elbasan                  = 105,
	Grantha                  = 106,
	Khojki                   = 107,
	Khudawadi                = 108,
	Linear_A                 = 109,
	Mahajani                 = 110,
	Manichaean               = 111,
	Mende_Kikakui            = 112,
	Modi                     = 113,
	Mro                      = 114,
	Nabataean                = 115,
	Old_North_Arabian        = 116,
	Old_Permic               = 117,
	Pahawh_Hmong             = 118,
	Palmyrene                = 119,
	Psalter_Pahlavi          = 120,
	Pau_Cin_Hau              = 121,
	Siddham                  = 122,
	Tirhuta                  = 123,
	Warang_Citi              = 124,
	Ahom                     = 125,
	Anatolian_Hieroglyphs    = 126,
	Hatran                   = 127,
	Multani                  = 128,
	Old_Hungarian            = 129,
	SignWriting              = 130,
	Adlam                    = 131,
	Bhaiksuki                = 132,
	Marchen                  = 133,
	Newa                     = 134,
	Osage                    = 135,
	Tangut                   = 136,
	Masaram_Gondi            = 137,
	Nushu                    = 138,
	Soyombo                  = 139,
	Zanabazar_Square         = 140
};

// Unicode Character Database (UCD) record
class ucd_record
{
	struct raw_record {
		std::uint_least64_t pflags;
		std::uint_least16_t cflags;
		std::uint_least8_t gcindex;
		std::uint_least8_t scindex;
	} const* record_;
	explicit ucd_record(raw_record const* r) noexcept : record_(r) {}
	struct raw_record_table {
		std::array<std::uint_least8_t, 8704> stage1;
		std::array<std::uint_least16_t, 31616> stage2;
		std::array<raw_record, 861> records;
	};
	static std::unique_ptr<raw_record_table> decompress_table();
	friend ucd_record query(char32_t r);
public:
	ctype compatability() const noexcept { return static_cast<ctype>(record_->cflags); }
	ptype properties() const noexcept { return static_cast<ptype>(record_->pflags); }
	gctype general_category() const noexcept { return static_cast<gctype>(UINT32_C(1) << record_->gcindex); }
	sctype script() const noexcept { return static_cast<sctype>(record_->scindex); }
	bool all_of(ctype c) const noexcept { return (compatability() & c) == c; }
	bool all_of(ptype p) const noexcept { return (properties() & p) == p; }
	bool all_of(gctype gc) const noexcept { return (general_category() & gc) == gc; }
	bool any_of(ctype c) const noexcept { return (compatability() & c) != ctype::none; }
	bool any_of(ptype p) const noexcept { return (properties() & p) != ptype::None; }
	bool any_of(gctype gc) const noexcept { return (general_category() & gc) != gctype::None; }
	bool none_of(ctype c) const noexcept { return (compatability() & c) == ctype::none; }
	bool none_of(ptype p) const noexcept { return (properties() & p) == ptype::None; }
	bool none_of(gctype gc) const noexcept { return (general_category() & gc) == gctype::None; }
};

// Retrieves the UCD record for the given Unicode codepoint
inline ucd_record query(char32_t r)
{
	static auto const table = ucd_record::decompress_table();
	std::size_t index = 61;
	if (r < 0x110000) {
		index = table->stage1[r >> 7];
		index = table->stage2[(index << 7) | (r & 0x7f)];
	}
	return ucd_record{table->records.data() + index};
}

namespace detail
{

template <class InputIt, class OutputIt>
void run_length_decode(InputIt first, InputIt last, OutputIt dest)
{
	using value_type = typename std::iterator_traits<InputIt>::value_type;
	constexpr auto seqmask = static_cast<value_type>(0x03ull << (std::numeric_limits<value_type>::digits - 2));
	while (first != last) {
		auto const lead = *first++;
		if ((lead & seqmask) == seqmask)
			dest = ::std::fill_n(dest, static_cast<std::size_t>(lead & ~seqmask) + 1, *first++);
		else
			*dest++ = lead;
	}
}

} // namespace detail

inline std::unique_ptr<ucd_record::raw_record_table> ucd_record::decompress_table()
{
	static constexpr std::array<std::uint_least8_t, 625> rlestage1 =
	{
		0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
		33, 34, 35, 36, 37, 38, 39, 40, 194, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
		63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 72, 75, 76, 193, 77, 67, 78, 193, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87,
		88, 89, 90, 91, 92, 93, 94, 95, 96, 242, 97, 98, 255, 97, 255, 97, 99, 100, 199, 101, 102, 193, 103, 104, 105, 106, 107, 108,
		109, 110, 111, 112, 113, 114, 115, 255, 35, 116, 207, 117, 241, 118, 193, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
		129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 136, 193, 143, 144, 136, 145, 146, 147, 148, 149, 150,
		151, 152, 153, 154, 193, 136, 155, 194, 136, 156, 157, 158, 159, 160, 161, 162, 136, 163, 164, 136, 165, 166, 167, 168, 193,
		136, 169, 193, 136, 170, 171, 193, 136, 172, 173, 174, 196, 136, 198, 175, 176, 177, 175, 178, 212, 136, 199, 179, 180, 222,
		136, 195, 181, 182, 255, 136, 195, 183, 184, 185, 186, 187, 197, 136, 188, 189, 238, 190, 191, 196, 190, 192, 192, 255, 136,
		192, 193, 192, 194, 192, 195, 193, 196, 192, 197, 209, 136, 192, 198, 192, 199, 229, 136, 96, 192, 200, 192, 201, 192, 202,
		192, 203, 136, 192, 204, 136, 192, 205, 192, 206, 192, 207, 192, 208, 192, 209, 192, 210, 192, 211, 192, 212, 195, 213, 192,
		214, 192, 215, 201, 136, 192, 216, 206, 136, 192, 217, 192, 218, 192, 219, 200, 136, 192, 220, 192, 221, 193, 136, 192, 222,
		192, 223, 192, 224, 192, 225, 192, 226, 136, 96, 192, 227, 196, 96, 192, 228, 192, 229, 192, 230, 192, 231, 192, 232, 192,
		233, 192, 234, 202, 136, 192, 235, 255, 97, 255, 97, 255, 97, 255, 97, 255, 97, 192, 236, 223, 97, 192, 237, 97, 192, 238,
		235, 97, 192, 239, 248, 97, 192, 240, 215, 136, 195, 119, 192, 241, 201, 136, 192, 235, 255, 136, 255, 136, 255, 136, 255,
		136, 255, 136, 255, 136, 255, 136, 192, 235, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235,
		255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235, 255, 136, 255, 136, 255, 136, 255, 136, 255,
		136, 255, 136, 255, 136, 192, 235, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235, 255, 136,
		255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255,
		136, 255, 136, 192, 235, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235, 255, 136, 255, 136,
		255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255,
		136, 192, 235, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235, 192, 242, 192, 243, 192, 244,
		192, 245, 219, 243, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 255, 136, 192, 235, 255, 118, 255, 118, 255,
		118, 255, 118, 255, 118, 255, 118, 255, 118, 192, 246, 255, 118, 255, 118, 255, 118, 255, 118, 255, 118, 255, 118, 255, 118,
		192, 246
	};

	static constexpr std::array<std::uint_least16_t, 6083> rlestage2 =
	{
		49160, 0, 1, 49155, 2, 49169, 0, 3, 4, 5, 6, 7, 49153, 6, 8, 9, 10, 6, 11, 12, 13, 14, 6, 49161, 15, 16, 12, 49154, 11, 4,
		6, 49157, 17, 49171, 18, 9, 6, 10, 19, 20, 21, 49157, 22, 49153, 23, 49153, 24, 49167, 23, 9, 11, 10, 11, 49153, 0, 49155,
		25, 26, 49177, 25, 27, 28, 49155, 29, 30, 28, 31, 30, 32, 33, 34, 35, 30, 31, 30, 34, 49153, 36, 31, 37, 28, 38, 31, 36, 32,
		39, 49154, 36, 28, 49174, 40, 34, 49158, 40, 41, 49174, 42, 34, 49159, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42,
		40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 43, 40, 42, 40, 42, 40, 42, 40, 42, 44, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 41,
		40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 49153, 40, 42, 40, 42, 40, 42, 41, 42, 49153, 40, 42, 40, 42,
		49153, 40, 42, 49154, 40, 42, 44, 49155, 40, 42, 49153, 40, 42, 49154, 40, 49153, 42, 44, 49153, 40, 42, 49153, 40, 42, 40,
		42, 40, 42, 49153, 40, 42, 40, 49153, 44, 40, 42, 49153, 40, 42, 49154, 40, 42, 40, 42, 49153, 40, 42, 44, 45, 40, 42, 44,
		42, 49155, 45, 46, 47, 42, 46, 47, 42, 46, 47, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 49153, 42,
		40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 49153, 42, 46, 47, 42, 40, 42, 49154, 40, 42, 40, 42,
		40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 42, 40, 44, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 49157, 44, 49153, 40,
		42, 49153, 40, 49153, 42, 40, 42, 49155, 40, 42, 40, 43, 40, 42, 40, 42, 40, 49157, 42, 44, 49153, 42, 44, 42, 44, 49153,
		42, 49154, 44, 49153, 42, 44, 42, 44, 49153, 42, 44, 43, 49155, 42, 49153, 44, 42, 44, 49153, 42, 49153, 44, 42, 49158, 44,
		42, 49153, 44, 42, 49153, 44, 42, 49154, 44, 49157, 42, 49156, 44, 42, 44, 45, 49159, 44, 43, 42, 49168, 44, 49153, 48, 49,
		49157, 48, 49158, 50, 49153, 51, 49155, 31, 49161, 50, 49153, 52, 49165, 31, 49156, 48, 49156, 31, 49153, 53, 50, 31, 50,
		49168, 31, 49220, 54, 55, 49160, 54, 56, 49159, 54, 49156, 57, 49157, 54, 49164, 57, 58, 59, 58, 59, 50, 60, 58, 59, 49153,
		61, 62, 49154, 59, 63, 58, 49155, 61, 60, 31, 58, 64, 49154, 58, 61, 58, 61, 49153, 58, 59, 49168, 58, 61, 49160, 58, 49173,
		59, 65, 49163, 59, 58, 49153, 66, 67, 49153, 68, 66, 65, 59, 58, 59, 58, 59, 58, 59, 58, 59, 58, 59, 69, 70, 69, 70, 69, 70,
		69, 70, 69, 70, 69, 70, 69, 70, 49153, 66, 59, 71, 72, 66, 73, 58, 59, 49153, 58, 59, 74, 49154, 58, 49199, 75, 49189, 76,
		77, 76, 77, 49158, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75,
		76, 75, 76, 75, 76, 75, 76, 75, 76, 78, 49153, 79, 49153, 54, 79, 49153, 80, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76,
		75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75,
		76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 49153, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 49153, 76, 75, 76,
		75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75,
		76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76,
		75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75,
		76, 61, 49189, 81, 49153, 61, 82, 49157, 83, 61, 49189, 84, 85, 61, 86, 87, 49153, 61, 49153, 88, 89, 61, 49168, 90, 91, 49164,
		90, 49165, 92, 93, 92, 94, 49153, 92, 95, 92, 96, 94, 96, 49159, 61, 49178, 97, 49156, 61, 49154, 97, 94, 98, 49162, 61, 49156,
		99, 100, 49154, 101, 49153, 102, 103, 63, 102, 49153, 104, 49162, 105, 63, 106, 61, 102, 86, 49183, 107, 108, 49161, 107,
		49159, 109, 49154, 110, 105, 111, 112, 49158, 105, 49161, 113, 49155, 102, 49153, 107, 110, 49250, 107, 114, 107, 49158, 105,
		100, 104, 49153, 112, 49155, 105, 49153, 115, 49153, 105, 104, 49154, 112, 105, 49153, 107, 49161, 113, 49154, 107, 49153,
		104, 107, 49154, 116, 49159, 117, 118, 117, 118, 61, 119, 120, 121, 49181, 120, 49167, 122, 49162, 123, 49153, 61, 49154,
		120, 49199, 107, 49189, 124, 49162, 125, 124, 49165, 61, 49161, 126, 49184, 127, 49160, 128, 49153, 129, 130, 131, 132, 133,
		134, 49156, 61, 49173, 135, 49153, 136, 49153, 137, 138, 49160, 136, 138, 49154, 136, 138, 49155, 136, 139, 49153, 61, 49166,
		140, 61, 49176, 141, 49154, 142, 49153, 61, 143, 61, 49162, 120, 49204, 61, 49172, 107, 61, 49159, 107, 49173, 61, 49163,
		105, 49153, 144, 100, 49158, 111, 49157, 112, 49166, 111, 105, 49154, 145, 146, 49205, 147, 145, 146, 148, 147, 49154, 146,
		49159, 145, 49155, 146, 148, 49153, 146, 147, 49153, 54, 49153, 148, 49154, 145, 49161, 147, 49153, 145, 49153, 86, 49161,
		149, 150, 151, 49165, 147, 152, 153, 49153, 154, 61, 49159, 152, 49153, 61, 49153, 152, 49153, 61, 49173, 152, 61, 49158,
		152, 61, 152, 49154, 61, 49155, 152, 49153, 61, 155, 152, 156, 49153, 154, 49155, 153, 49153, 61, 49153, 154, 49153, 61, 49153,
		154, 155, 152, 49159, 61, 156, 49155, 61, 49153, 152, 61, 49154, 152, 49153, 153, 49153, 61, 49161, 157, 49153, 152, 49153,
		158, 49157, 159, 160, 158, 152, 161, 49154, 61, 49153, 162, 163, 61, 49157, 164, 49155, 61, 49153, 164, 49153, 61, 49173,
		164, 61, 49158, 164, 61, 49153, 164, 61, 49153, 164, 61, 49153, 164, 49153, 61, 165, 61, 49154, 163, 49153, 162, 49155, 61,
		49153, 162, 49153, 61, 49153, 162, 165, 49154, 61, 162, 49158, 61, 49155, 164, 61, 164, 49158, 61, 49161, 166, 49153, 162,
		49154, 164, 162, 49162, 61, 49153, 167, 168, 61, 49160, 169, 61, 49154, 169, 61, 49173, 169, 61, 49158, 169, 61, 49153, 169,
		61, 49156, 169, 49153, 61, 170, 169, 49154, 168, 49156, 167, 61, 49153, 167, 168, 61, 49153, 168, 170, 49153, 61, 169, 49166,
		61, 49153, 169, 49153, 167, 49153, 61, 49161, 171, 172, 173, 49158, 61, 169, 49154, 167, 49154, 170, 61, 174, 49153, 175,
		61, 49159, 176, 49153, 61, 49153, 176, 49153, 61, 49173, 176, 61, 49158, 176, 61, 49153, 176, 61, 49156, 176, 49153, 61, 177,
		176, 178, 174, 175, 49155, 174, 49153, 61, 49153, 175, 49153, 61, 49153, 175, 177, 49159, 61, 174, 178, 49155, 61, 49153,
		176, 61, 49154, 176, 49153, 174, 49153, 61, 49161, 179, 180, 176, 49157, 181, 49161, 61, 182, 183, 61, 49157, 183, 49154,
		61, 49154, 183, 61, 49155, 183, 49154, 61, 49153, 183, 61, 183, 61, 49153, 183, 49154, 61, 49153, 183, 49154, 61, 49154, 183,
		49154, 61, 49163, 183, 49155, 61, 184, 185, 182, 49153, 185, 49154, 61, 49154, 185, 61, 49154, 185, 186, 49153, 61, 183, 49157,
		61, 184, 49165, 61, 49161, 187, 49154, 188, 49157, 189, 190, 189, 49156, 61, 191, 49154, 192, 61, 49159, 193, 61, 49154, 193,
		61, 49174, 193, 61, 49167, 193, 49154, 61, 193, 49154, 191, 49155, 192, 61, 49154, 191, 61, 49154, 191, 194, 49158, 61, 49153,
		191, 61, 49154, 193, 49156, 61, 49153, 193, 49153, 191, 49153, 61, 49161, 195, 49159, 61, 49158, 196, 197, 198, 199, 49153,
		200, 61, 49159, 198, 61, 49154, 198, 61, 49174, 198, 61, 49161, 198, 61, 49156, 198, 49153, 61, 201, 198, 200, 199, 49153,
		200, 202, 49153, 200, 61, 199, 49153, 200, 61, 49153, 200, 199, 201, 49158, 61, 49153, 202, 49158, 61, 198, 61, 49153, 198,
		49153, 199, 49153, 61, 49161, 203, 61, 49153, 198, 49164, 61, 49153, 204, 49153, 205, 61, 49159, 206, 61, 49154, 206, 61,
		49192, 206, 49153, 207, 206, 208, 49153, 205, 49155, 204, 61, 49154, 205, 61, 49154, 205, 207, 206, 209, 49155, 61, 49154,
		206, 208, 49158, 210, 49154, 206, 49153, 204, 49153, 61, 49161, 211, 49160, 210, 209, 49157, 206, 49153, 61, 49153, 212, 61,
		49169, 213, 49154, 61, 49175, 213, 61, 49160, 213, 61, 213, 49153, 61, 49158, 213, 49154, 61, 214, 49155, 61, 215, 49153,
		212, 49154, 216, 61, 216, 61, 49158, 212, 215, 49157, 61, 49161, 217, 49153, 61, 49153, 212, 218, 49163, 61, 49199, 219, 220,
		219, 221, 49158, 220, 49155, 61, 222, 49156, 223, 219, 224, 49157, 225, 220, 225, 226, 49161, 227, 49153, 228, 49188, 61,
		49153, 229, 61, 229, 49153, 61, 49153, 229, 61, 229, 49153, 61, 229, 49157, 61, 49155, 229, 61, 49158, 229, 61, 49154, 229,
		61, 229, 61, 229, 49153, 61, 49153, 229, 61, 49155, 229, 230, 229, 231, 49157, 230, 61, 49153, 230, 229, 49153, 61, 49156,
		232, 61, 233, 61, 49156, 234, 230, 49153, 61, 49161, 235, 49153, 61, 49155, 229, 49183, 61, 236, 49154, 237, 49155, 238, 239,
		49155, 238, 49157, 239, 237, 238, 49154, 237, 49153, 240, 49157, 237, 49161, 241, 49161, 242, 237, 240, 237, 240, 237, 240,
		243, 244, 243, 244, 49153, 245, 49159, 236, 61, 49187, 236, 49155, 61, 49165, 246, 247, 49153, 246, 49154, 240, 238, 49153,
		240, 49156, 236, 49162, 246, 61, 49187, 246, 61, 49159, 237, 240, 49157, 237, 61, 49153, 237, 49156, 238, 49155, 248, 49153,
		238, 49188, 61, 49194, 249, 49153, 250, 49155, 251, 250, 49156, 251, 252, 250, 49153, 252, 49153, 250, 49153, 251, 249, 49161,
		253, 49153, 254, 49155, 255, 49157, 249, 49153, 250, 49153, 251, 49155, 249, 49154, 251, 249, 250, 49153, 256, 49153, 249,
		49153, 250, 49156, 256, 49154, 249, 49155, 251, 49164, 249, 251, 49153, 250, 49153, 251, 49157, 257, 252, 249, 257, 49161,
		253, 49153, 257, 250, 251, 49153, 258, 49189, 259, 61, 259, 49156, 61, 259, 49153, 61, 49194, 260, 261, 262, 49154, 260, 49246,
		263, 49153, 264, 49310, 263, 49224, 265, 61, 49155, 265, 49153, 61, 49158, 265, 61, 265, 61, 49155, 265, 49153, 61, 49192,
		265, 61, 49155, 265, 49153, 61, 49184, 265, 61, 49155, 265, 49153, 61, 49158, 265, 61, 265, 61, 49155, 265, 49153, 61, 49166,
		265, 61, 49208, 265, 61, 49155, 265, 49153, 61, 49218, 265, 49153, 61, 49153, 266, 267, 268, 269, 270, 49155, 269, 49153,
		270, 49160, 271, 49162, 272, 49154, 61, 49167, 265, 49161, 273, 49157, 61, 49237, 274, 49153, 61, 49157, 275, 49153, 61, 276,
		49515, 277, 278, 279, 49168, 277, 280, 49177, 281, 282, 283, 49154, 61, 49226, 284, 49154, 63, 49154, 285, 49159, 284, 49158,
		61, 49164, 286, 61, 49155, 286, 49153, 287, 288, 49162, 61, 49169, 289, 49153, 290, 291, 49153, 86, 49160, 61, 49169, 292,
		49153, 293, 49163, 61, 49164, 294, 61, 49154, 294, 61, 49153, 295, 49163, 61, 49203, 296, 49153, 297, 298, 49158, 299, 49159,
		298, 299, 49153, 298, 49162, 300, 49154, 301, 302, 49153, 303, 301, 304, 296, 300, 49153, 61, 49161, 305, 49157, 61, 49161,
		306, 49157, 61, 49153, 307, 63, 86, 308, 63, 309, 307, 308, 310, 311, 49154, 312, 313, 61, 49161, 314, 49157, 61, 49186, 315,
		316, 49203, 315, 49159, 61, 49156, 315, 49153, 317, 49185, 315, 318, 315, 49156, 61, 49221, 277, 49161, 61, 49182, 319, 61,
		49154, 320, 49155, 321, 49153, 320, 49154, 321, 49155, 61, 49153, 321, 320, 49157, 321, 49154, 322, 49155, 61, 323, 49154,
		61, 49153, 324, 49161, 325, 49181, 326, 49153, 61, 49156, 326, 49162, 61, 49195, 327, 49155, 61, 49156, 327, 49154, 328, 49153,
		327, 328, 49166, 327, 49157, 61, 49161, 329, 330, 49154, 61, 49153, 331, 49183, 332, 49174, 333, 49153, 334, 49153, 335, 334,
		49153, 61, 49153, 336, 49204, 337, 338, 339, 338, 49158, 339, 61, 340, 338, 339, 49153, 338, 49159, 339, 49157, 338, 49153,
		339, 49159, 341, 49153, 61, 341, 49161, 342, 49157, 61, 49161, 342, 49157, 61, 49158, 343, 344, 49155, 345, 49153, 343, 49153,
		61, 49165, 54, 346, 49216, 61, 49155, 347, 348, 49198, 349, 350, 348, 49156, 347, 348, 347, 49156, 348, 347, 348, 351, 49158,
		349, 49155, 61, 49161, 352, 49153, 353, 354, 355, 49153, 353, 354, 49161, 356, 49160, 350, 49160, 356, 49154, 61, 49153, 357,
		358, 49181, 359, 358, 49155, 357, 49153, 358, 49153, 357, 360, 361, 49153, 357, 49153, 359, 49161, 362, 49157, 359, 49189,
		363, 364, 365, 49153, 366, 49154, 365, 366, 365, 49154, 366, 49153, 367, 49159, 61, 49155, 368, 49187, 369, 49159, 370, 49159,
		371, 49153, 370, 372, 373, 49154, 61, 49153, 374, 49154, 375, 49161, 376, 49154, 61, 49154, 369, 49161, 377, 49181, 378, 49154,
		379, 380, 49153, 379, 49153, 381, 49160, 382, 49206, 61, 49159, 383, 49159, 61, 49154, 54, 384, 49164, 54, 385, 49158, 54,
		49155, 386, 54, 49155, 386, 49153, 387, 54, 49153, 386, 385, 49153, 54, 49157, 61, 49189, 44, 49156, 74, 388, 49200, 48, 49156,
		389, 49, 49154, 48, 49156, 389, 49164, 44, 390, 42, 49154, 44, 42, 49175, 44, 391, 49155, 44, 49160, 392, 393, 49154, 392,
		393, 49173, 392, 394, 49155, 57, 49163, 54, 49174, 57, 49165, 110, 49156, 54, 61, 49153, 57, 49154, 54, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42,
		40, 42, 40, 42, 40, 42, 40, 42, 40, 43, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42,
		40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 49156, 42, 49153, 41, 49153, 44, 40, 44, 40,
		42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42,
		40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 43, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42,
		40, 42, 49159, 59, 49159, 58, 49157, 59, 49153, 61, 49157, 58, 49153, 61, 49159, 59, 49159, 58, 49159, 59, 49159, 58, 49157,
		59, 49153, 61, 49157, 58, 49153, 61, 49159, 59, 61, 58, 61, 58, 61, 58, 61, 58, 49159, 59, 49159, 58, 49165, 59, 49153, 61,
		49159, 65, 49159, 395, 49159, 65, 49159, 395, 49159, 65, 49159, 395, 49153, 59, 49154, 65, 61, 59, 65, 49155, 58, 395, 60,
		59, 49154, 60, 49154, 65, 61, 59, 65, 49155, 58, 395, 49154, 60, 49155, 59, 49153, 61, 49153, 59, 49155, 58, 61, 49154, 60,
		49159, 59, 49156, 58, 49154, 60, 49153, 61, 49154, 65, 61, 59, 65, 49155, 58, 395, 49153, 60, 61, 49162, 27, 35, 396, 397,
		49153, 398, 49157, 399, 400, 28, 401, 402, 403, 49153, 33, 39, 403, 33, 49155, 28, 404, 49153, 28, 404, 405, 406, 49156, 407,
		27, 49153, 28, 49154, 400, 49155, 28, 33, 39, 28, 49153, 408, 28, 409, 410, 49154, 28, 34, 411, 412, 49154, 408, 49159, 28,
		34, 413, 409, 49161, 28, 27, 35, 49155, 414, 415, 49155, 407, 49157, 35, 36, 393, 49153, 61, 49157, 36, 416, 417, 416, 418,
		419, 392, 49161, 36, 416, 417, 416, 418, 419, 61, 49164, 392, 49154, 61, 49183, 222, 49167, 61, 49164, 420, 49155, 346, 420,
		49154, 346, 49153, 420, 49155, 57, 49156, 420, 57, 49166, 61, 49153, 248, 421, 49155, 248, 421, 49153, 248, 422, 49154, 421,
		49153, 422, 49154, 421, 422, 248, 421, 49153, 248, 423, 49156, 421, 49157, 248, 421, 248, 58, 248, 421, 424, 49153, 40, 49153,
		421, 425, 422, 49153, 421, 40, 421, 422, 49155, 426, 427, 49153, 248, 49153, 422, 49153, 421, 49156, 416, 421, 49153, 422,
		49153, 428, 248, 416, 49153, 248, 42, 248, 49167, 36, 49167, 429, 49167, 430, 49154, 431, 40, 42, 49155, 431, 36, 49153, 248,
		49155, 61, 49156, 34, 49156, 432, 49153, 34, 49155, 432, 34, 49153, 432, 34, 49153, 432, 34, 432, 30, 49156, 432, 34, 30,
		49153, 432, 49155, 30, 49153, 432, 49155, 30, 49169, 432, 49153, 34, 49153, 432, 34, 432, 34, 49158, 432, 30, 432, 49157,
		30, 49153, 432, 49165, 30, 49181, 34, 433, 49388, 34, 49159, 30, 434, 435, 434, 435, 49171, 30, 49153, 34, 49158, 30, 411,
		412, 49232, 30, 34, 49181, 30, 49176, 34, 49153, 432, 30, 432, 49175, 30, 432, 49162, 30, 49157, 34, 432, 49219, 30, 49176,
		436, 49162, 30, 49172, 436, 49211, 36, 49177, 248, 49177, 437, 49177, 438, 49173, 36, 49311, 30, 49153, 432, 49163, 30, 49160,
		432, 34, 49155, 30, 49156, 432, 34, 49155, 30, 49153, 432, 49153, 30, 49153, 432, 49154, 30, 49156, 432, 49165, 30, 432, 30,
		432, 49153, 30, 49157, 432, 49162, 30, 49159, 34, 49156, 30, 49153, 432, 49208, 30, 432, 30, 432, 49180, 30, 49155, 432, 49160,
		30, 49153, 432, 34, 49271, 30, 411, 412, 411, 412, 411, 412, 411, 412, 411, 412, 411, 412, 411, 412, 49181, 36, 49195, 30,
		49156, 34, 434, 435, 49182, 34, 434, 435, 434, 435, 434, 435, 434, 435, 434, 435, 49167, 34, 49279, 439, 49154, 34, 434, 435,
		434, 435, 434, 435, 434, 435, 434, 435, 434, 435, 434, 435, 434, 435, 434, 435, 434, 435, 434, 435, 49214, 34, 434, 435, 434,
		435, 49183, 34, 434, 435, 49153, 34, 49199, 30, 49172, 34, 49153, 30, 49157, 34, 49190, 30, 49153, 436, 49183, 30, 49153,
		436, 49185, 30, 49154, 436, 49163, 30, 436, 49160, 30, 49176, 436, 49155, 30, 49167, 436, 49198, 440, 61, 49198, 441, 61,
		40, 42, 49154, 40, 49153, 42, 40, 42, 40, 42, 40, 42, 49155, 40, 44, 40, 42, 44, 40, 42, 49156, 44, 393, 392, 49153, 40, 69,
		70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70,
		69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69,
		70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70,
		69, 70, 69, 70, 69, 70, 442, 49157, 443, 69, 70, 69, 70, 49154, 444, 69, 70, 49156, 61, 49155, 445, 446, 49153, 445, 49189,
		447, 61, 447, 49156, 61, 447, 49153, 61, 49207, 448, 49158, 61, 449, 450, 49165, 61, 451, 49174, 265, 49160, 61, 49158, 265,
		61, 49158, 265, 61, 49158, 265, 61, 49158, 265, 61, 49158, 265, 61, 49158, 265, 61, 49158, 265, 61, 49158, 265, 61, 49183,
		452, 49153, 28, 453, 454, 453, 454, 49154, 28, 453, 454, 28, 453, 454, 49160, 28, 399, 49153, 28, 399, 28, 453, 454, 49153,
		28, 453, 454, 411, 412, 411, 412, 411, 412, 411, 412, 49155, 28, 408, 455, 49161, 28, 49153, 399, 408, 49154, 28, 399, 456,
		403, 49158, 28, 49205, 436, 49177, 457, 61, 49240, 457, 49163, 61, 49365, 457, 49177, 61, 49153, 458, 49153, 248, 49159, 458,
		49155, 61, 27, 456, 408, 28, 248, 459, 460, 461, 411, 412, 411, 412, 403, 462, 403, 462, 411, 412, 49153, 30, 411, 412, 411,
		412, 411, 412, 411, 412, 399, 403, 49153, 462, 30, 49160, 461, 49155, 54, 49153, 463, 399, 49156, 108, 49153, 248, 49154,
		461, 464, 386, 261, 49153, 248, 61, 49237, 465, 49153, 61, 49153, 54, 49153, 466, 49153, 467, 465, 468, 49241, 469, 261, 52,
		49153, 470, 469, 49156, 61, 49193, 471, 49153, 61, 49202, 263, 264, 49193, 263, 61, 49153, 248, 49155, 36, 49161, 248, 49178,
		471, 49156, 61, 49187, 248, 49163, 61, 49167, 469, 49182, 472, 61, 49161, 36, 49181, 248, 49159, 36, 248, 49166, 36, 49182,
		472, 248, 49161, 36, 49190, 248, 49166, 36, 49167, 248, 49198, 473, 61, 49239, 473, 49319, 248, 49333, 474, 49161, 61, 49215,
		248, 49258, 474, 49172, 61, 49172, 475, 476, 49398, 475, 49154, 61, 49206, 477, 49160, 61, 49191, 478, 49157, 479, 480, 481,
		49291, 482, 483, 484, 49153, 485, 49167, 482, 49161, 486, 49153, 482, 49171, 61, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75,
		76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76,
		75, 76, 75, 76, 487, 79, 49154, 80, 488, 49159, 452, 49153, 79, 488, 489, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76,
		75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 75, 76, 49153, 490, 49153, 452, 49221, 491, 49161, 492, 49153, 493,
		494, 495, 49154, 496, 495, 49159, 61, 49174, 497, 49160, 50, 49153, 31, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 49153, 44, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40,
		42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42,
		40, 42, 40, 42, 392, 49159, 44, 40, 42, 40, 42, 49153, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 50, 49153, 497, 40, 42, 40,
		44, 45, 40, 42, 40, 42, 49153, 44, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 40, 42, 49156,
		40, 61, 49156, 40, 42, 40, 42, 49214, 61, 45, 49153, 48, 44, 49156, 45, 49153, 498, 499, 49154, 498, 499, 49155, 498, 499,
		49174, 498, 49153, 500, 49153, 501, 500, 49155, 502, 49155, 61, 49157, 36, 49153, 248, 222, 248, 49157, 61, 49203, 503, 49153,
		504, 49153, 505, 49159, 61, 49153, 506, 49201, 507, 49167, 506, 508, 509, 49159, 61, 49153, 510, 49161, 511, 49157, 61, 49169,
		148, 49157, 147, 49154, 150, 147, 150, 147, 49153, 61, 49161, 512, 49179, 513, 49156, 514, 49154, 515, 384, 516, 49174, 517,
		49162, 518, 519, 520, 49162, 61, 521, 49180, 263, 49154, 61, 49154, 522, 523, 49198, 524, 525, 49153, 523, 49155, 522, 49153,
		523, 522, 49154, 523, 526, 49157, 527, 528, 49153, 529, 49155, 527, 61, 108, 49161, 530, 49155, 61, 49153, 527, 49156, 249,
		252, 531, 49160, 249, 49161, 253, 49156, 249, 61, 49192, 532, 49157, 533, 49153, 534, 49153, 533, 49153, 534, 49153, 533,
		49160, 61, 49154, 532, 533, 49159, 532, 533, 534, 49153, 61, 49161, 535, 49153, 61, 536, 49154, 537, 49167, 249, 531, 49157,
		249, 49154, 258, 249, 257, 252, 257, 49153, 249, 49199, 538, 539, 538, 49154, 539, 49153, 540, 49153, 539, 540, 538, 49153,
		540, 538, 539, 541, 542, 541, 542, 49175, 61, 49153, 538, 543, 544, 545, 49162, 546, 547, 49153, 548, 49153, 547, 49153, 549,
		546, 49153, 550, 547, 551, 49161, 61, 49157, 265, 49153, 61, 49157, 265, 49153, 61, 49157, 265, 49160, 61, 49158, 265, 61,
		49158, 265, 61, 49186, 44, 42, 49158, 44, 31, 49155, 48, 49156, 44, 74, 49161, 61, 49231, 275, 49186, 546, 49153, 547, 548,
		49153, 547, 548, 49153, 547, 549, 552, 551, 49153, 61, 49161, 553, 49157, 61, 49187, 263, 49163, 61, 49174, 263, 49155, 61,
		49200, 263, 49155, 61, 49279, 554, 49279, 555, 49293, 556, 49153, 474, 556, 474, 556, 49153, 474, 49161, 556, 474, 556, 474,
		556, 49153, 474, 49153, 556, 49154, 474, 49219, 556, 49153, 61, 49257, 556, 49189, 61, 49158, 41, 49163, 61, 49156, 85, 49156,
		61, 97, 92, 49161, 97, 557, 49164, 97, 61, 49156, 97, 61, 97, 61, 49153, 97, 61, 49153, 97, 61, 49161, 97, 49249, 107, 49167,
		558, 49168, 61, 49290, 107, 49157, 559, 49369, 107, 412, 411, 49167, 61, 49215, 107, 49153, 61, 49205, 107, 49159, 61, 49183,
		560, 49161, 107, 49153, 559, 103, 104, 49153, 61, 49167, 561, 49154, 261, 562, 49154, 261, 563, 564, 261, 49157, 61, 49165,
		54, 49153, 79, 261, 49153, 468, 49153, 409, 563, 564, 563, 564, 563, 564, 563, 564, 563, 564, 563, 564, 565, 566, 565, 566,
		49153, 28, 563, 564, 49155, 261, 49154, 409, 49153, 63, 567, 61, 63, 568, 49153, 86, 468, 563, 564, 563, 564, 563, 564, 49153,
		261, 569, 416, 570, 49154, 416, 61, 569, 222, 49153, 261, 49155, 61, 559, 107, 559, 107, 559, 61, 559, 107, 559, 107, 559,
		107, 559, 107, 559, 49277, 107, 49153, 61, 35, 61, 86, 571, 261, 222, 49153, 261, 572, 563, 564, 261, 416, 63, 468, 567, 261,
		49161, 573, 568, 63, 49154, 416, 86, 261, 49157, 574, 49171, 40, 563, 569, 564, 575, 409, 31, 49157, 576, 49171, 42, 563,
		416, 564, 416, 563, 564, 86, 565, 566, 63, 261, 49161, 469, 52, 49196, 469, 49153, 577, 264, 49181, 263, 49154, 61, 49157,
		263, 49153, 61, 49157, 263, 49153, 61, 49157, 263, 49153, 61, 49154, 263, 49154, 61, 49153, 222, 416, 31, 248, 49153, 222,
		61, 248, 49155, 416, 49153, 248, 61, 49160, 415, 49154, 578, 49153, 248, 49153, 560, 49163, 579, 61, 49177, 579, 61, 49170,
		579, 61, 49153, 579, 61, 49166, 579, 49153, 61, 49165, 579, 49185, 61, 49274, 579, 49156, 61, 49154, 261, 49155, 61, 49196,
		36, 49154, 61, 49160, 248, 49204, 580, 49155, 581, 49168, 582, 49153, 581, 49154, 582, 61, 49163, 248, 49155, 61, 582, 49198,
		61, 49196, 248, 57, 49281, 61, 49180, 583, 49154, 61, 49200, 584, 49166, 61, 54, 49178, 36, 49155, 61, 49183, 585, 49155,
		586, 49160, 61, 49154, 585, 49168, 587, 588, 49159, 587, 588, 49156, 61, 49189, 589, 49156, 590, 49156, 61, 49181, 591, 61,
		592, 49187, 593, 49155, 61, 49159, 593, 594, 49156, 595, 49193, 61, 49191, 596, 49191, 597, 49199, 598, 49181, 599, 49153,
		61, 49161, 600, 49157, 61, 49187, 601, 49155, 61, 49187, 602, 49155, 61, 49191, 603, 49159, 61, 49203, 604, 49162, 61, 605,
		49167, 61, 49334, 606, 49160, 61, 49173, 606, 49161, 61, 49159, 606, 49175, 61, 49157, 607, 49153, 61, 607, 61, 49195, 607,
		61, 49153, 607, 49154, 61, 607, 49153, 61, 607, 49173, 608, 61, 609, 49159, 610, 49174, 611, 49153, 612, 49158, 613, 49182,
		614, 49159, 61, 49160, 615, 49199, 61, 49170, 616, 61, 49153, 616, 49156, 61, 49156, 617, 49173, 618, 49157, 619, 49154, 61,
		620, 49177, 621, 49156, 61, 622, 49215, 61, 49183, 623, 49175, 624, 49155, 61, 49153, 625, 49153, 624, 49167, 625, 49153,
		61, 49197, 625, 626, 49154, 627, 61, 49153, 627, 49156, 61, 49155, 627, 49155, 626, 61, 49154, 626, 61, 49178, 626, 49155,
		61, 49154, 628, 49155, 61, 628, 49159, 629, 49159, 61, 49157, 630, 49153, 631, 630, 49158, 61, 49180, 632, 49153, 633, 634,
		49180, 635, 49154, 636, 49183, 61, 49159, 637, 638, 49179, 637, 49153, 639, 49155, 61, 49156, 640, 49157, 641, 642, 49160,
		61, 49205, 643, 49154, 61, 644, 49157, 645, 49173, 646, 49153, 61, 49159, 647, 49170, 648, 49156, 61, 49159, 649, 49169, 650,
		49158, 61, 49155, 651, 49163, 61, 49158, 652, 49231, 61, 49224, 653, 49206, 61, 49202, 654, 49164, 61, 49202, 655, 49158,
		61, 49157, 656, 49247, 61, 49182, 657, 61, 658, 659, 658, 49204, 660, 49165, 659, 661, 49153, 662, 49156, 663, 49155, 61,
		49171, 664, 49161, 665, 49166, 61, 661, 49153, 666, 667, 49196, 668, 49154, 667, 49155, 669, 49153, 667, 49153, 670, 49153,
		671, 672, 49155, 673, 49165, 61, 49176, 674, 49158, 61, 49161, 675, 49157, 61, 49154, 676, 49187, 677, 49156, 676, 678, 49157,
		676, 49153, 679, 61, 49161, 680, 681, 49154, 682, 49163, 61, 49186, 683, 684, 49153, 685, 683, 49160, 61, 49153, 686, 687,
		49199, 688, 49154, 687, 49160, 686, 687, 689, 49155, 688, 49153, 690, 49154, 691, 49154, 692, 690, 49153, 61, 49161, 693,
		688, 691, 688, 691, 49153, 690, 61, 49171, 694, 49162, 61, 49169, 695, 61, 49176, 695, 49154, 696, 49154, 697, 49153, 696,
		697, 698, 699, 697, 49153, 700, 701, 49153, 700, 702, 697, 49216, 61, 49158, 703, 61, 703, 61, 49155, 703, 61, 49166, 703,
		61, 49161, 703, 704, 49157, 61, 49198, 705, 706, 49154, 707, 49157, 706, 49153, 708, 49156, 61, 49161, 709, 49157, 61, 49153,
		710, 49153, 711, 61, 49159, 712, 49153, 61, 49153, 712, 49153, 61, 49173, 712, 61, 49158, 712, 61, 49153, 712, 61, 49156,
		712, 49153, 61, 713, 712, 714, 711, 710, 49155, 711, 49153, 61, 49153, 711, 49153, 61, 49153, 711, 715, 49153, 61, 712, 49157,
		61, 714, 49156, 61, 716, 49155, 712, 49153, 711, 49153, 61, 49158, 713, 49154, 61, 49156, 713, 49162, 61, 49204, 717, 49154,
		718, 49159, 719, 49153, 718, 720, 49153, 719, 718, 720, 49155, 717, 49153, 721, 722, 49153, 723, 49161, 724, 61, 722, 61,
		723, 49185, 61, 49199, 725, 726, 49153, 727, 49157, 728, 727, 728, 49153, 727, 726, 727, 49153, 728, 727, 49153, 729, 49153,
		725, 730, 725, 49159, 61, 49161, 731, 49189, 61, 49198, 732, 733, 49153, 734, 49155, 735, 49153, 61, 49155, 734, 49153, 735,
		734, 49153, 736, 737, 49153, 738, 49153, 739, 49154, 740, 49166, 738, 49155, 732, 49153, 735, 49185, 61, 49199, 741, 49154,
		742, 49159, 743, 49153, 742, 743, 742, 744, 743, 49153, 745, 746, 741, 49162, 61, 49161, 747, 49157, 61, 49164, 307, 49170,
		61, 49194, 748, 749, 750, 749, 49153, 750, 49157, 749, 751, 752, 49159, 61, 49161, 753, 49205, 61, 49177, 754, 49154, 61,
		49154, 755, 49153, 756, 49155, 755, 756, 49155, 755, 757, 49155, 61, 49161, 758, 49153, 759, 49154, 760, 761, 49247, 61, 49183,
		762, 49183, 763, 49161, 764, 49160, 765, 49163, 61, 766, 767, 49157, 768, 49153, 769, 49153, 768, 49191, 767, 770, 771, 49155,
		768, 769, 767, 49155, 768, 49154, 772, 49153, 773, 49154, 772, 771, 49159, 61, 774, 49157, 775, 49153, 776, 49154, 775, 49191,
		774, 49153, 61, 49155, 774, 49164, 775, 776, 777, 778, 779, 49153, 780, 61, 49154, 779, 49153, 781, 49180, 61, 49208, 782,
		49158, 61, 49160, 783, 61, 49188, 783, 784, 49158, 785, 61, 49157, 785, 784, 786, 783, 49153, 787, 788, 49153, 789, 49161,
		61, 49161, 790, 49170, 791, 49154, 61, 792, 793, 49181, 794, 49153, 61, 49173, 795, 61, 796, 49158, 795, 796, 49153, 795,
		796, 49153, 795, 49224, 61, 49158, 797, 61, 49153, 797, 61, 49189, 797, 49157, 798, 49154, 61, 798, 61, 49153, 798, 61, 49154,
		798, 799, 798, 49153, 799, 797, 798, 49159, 61, 49161, 800, 49189, 61, 49305, 801, 49253, 61, 49262, 802, 61, 49156, 803,
		49162, 61, 49219, 801, 49211, 61, 49326, 804, 49232, 61, 49350, 805, 49208, 61, 49336, 491, 49158, 61, 49182, 806, 61, 49161,
		807, 49155, 61, 49153, 808, 49247, 61, 49181, 809, 49153, 61, 49156, 810, 811, 49161, 61, 49199, 812, 49158, 813, 49153, 814,
		815, 49153, 816, 49155, 817, 49153, 818, 49153, 819, 814, 817, 49161, 61, 49161, 820, 61, 49158, 821, 61, 49172, 812, 49156,
		61, 49170, 812, 49263, 61, 49220, 822, 49162, 61, 822, 49197, 823, 49167, 61, 49155, 824, 49164, 825, 49215, 61, 826, 827,
		49181, 61, 49388, 828, 49170, 61, 49266, 828, 49164, 61, 469, 49437, 465, 49232, 61, 49419, 829, 49155, 61, 49258, 830, 49156,
		61, 49164, 830, 49154, 61, 49160, 830, 49158, 61, 49161, 830, 49153, 61, 831, 832, 833, 834, 49155, 35, 49243, 61, 49269,
		248, 49161, 61, 49190, 248, 49153, 61, 49211, 248, 835, 836, 49154, 54, 49154, 248, 385, 49156, 837, 49159, 35, 49159, 54,
		49153, 248, 49158, 54, 49181, 248, 49155, 54, 49210, 248, 49174, 61, 49217, 582, 49154, 838, 582, 49209, 61, 49238, 248, 49160,
		61, 49169, 36, 49165, 61, 49177, 421, 49159, 422, 49153, 428, 49167, 422, 49177, 421, 49158, 422, 61, 49153, 428, 49167, 422,
		49177, 421, 49159, 422, 49153, 428, 49167, 422, 421, 61, 49153, 421, 49153, 61, 421, 49153, 61, 49153, 421, 49153, 61, 49155,
		421, 61, 49159, 421, 49155, 422, 61, 422, 61, 422, 49153, 428, 49155, 422, 61, 49162, 422, 49177, 421, 49159, 422, 49153,
		428, 49167, 422, 49153, 421, 61, 49155, 421, 49153, 61, 49159, 421, 61, 49158, 421, 61, 49159, 422, 49153, 428, 49167, 422,
		49153, 421, 61, 49155, 421, 61, 49156, 421, 61, 421, 49154, 61, 49158, 421, 61, 49159, 422, 49153, 428, 49167, 422, 49177,
		421, 49159, 422, 49153, 428, 49167, 422, 49177, 421, 49159, 422, 49153, 428, 49167, 422, 49177, 421, 49159, 422, 49153, 428,
		49167, 422, 49177, 421, 49159, 422, 49153, 428, 49167, 422, 49177, 421, 49159, 422, 49153, 428, 49167, 422, 49177, 421, 49159,
		422, 49153, 428, 49169, 422, 49153, 61, 49176, 421, 416, 49176, 422, 416, 49157, 422, 49176, 421, 416, 49176, 422, 416, 49157,
		422, 49176, 421, 416, 49176, 422, 416, 49157, 422, 49176, 421, 416, 49176, 422, 416, 49157, 422, 49176, 421, 416, 49176, 422,
		416, 49157, 422, 421, 422, 49153, 61, 49201, 839, 49279, 840, 49206, 841, 49155, 840, 49201, 841, 49159, 840, 841, 49165,
		840, 841, 49153, 840, 842, 843, 49153, 842, 844, 49166, 61, 49156, 841, 61, 49166, 841, 49231, 61, 49158, 845, 61, 49168,
		845, 49153, 61, 49158, 845, 61, 49153, 845, 61, 49156, 845, 49236, 61, 49348, 846, 49153, 61, 49160, 847, 49158, 848, 49192,
		61, 49185, 849, 49185, 850, 49154, 851, 852, 49154, 853, 49156, 61, 49161, 854, 49155, 61, 49153, 855, 49183, 61, 49155, 856,
		61, 49178, 856, 61, 49153, 856, 61, 856, 49153, 61, 856, 61, 49161, 856, 61, 49155, 856, 61, 856, 61, 856, 49157, 61, 856,
		49155, 61, 856, 61, 856, 61, 856, 61, 49154, 856, 61, 49153, 856, 61, 856, 49153, 61, 856, 61, 856, 61, 856, 61, 856, 61,
		856, 61, 49153, 856, 61, 856, 49153, 61, 49155, 856, 61, 49158, 856, 61, 49155, 856, 61, 49155, 856, 61, 856, 61, 49161, 856,
		61, 49168, 856, 49156, 61, 49154, 856, 61, 49156, 856, 61, 49168, 856, 49203, 61, 49153, 101, 49165, 61, 49195, 248, 49155,
		61, 49251, 248, 49163, 61, 49166, 248, 49153, 61, 49166, 248, 61, 49166, 248, 61, 49188, 248, 49161, 61, 49164, 36, 49154,
		61, 49182, 248, 61, 49177, 857, 49157, 248, 49177, 857, 49153, 248, 49155, 61, 49177, 857, 49186, 248, 49208, 61, 49177, 858,
		859, 49153, 248, 49164, 61, 49195, 248, 49155, 61, 49160, 248, 49158, 61, 49153, 248, 49165, 61, 49157, 248, 49177, 61, 49274,
		248, 49156, 497, 49236, 248, 49162, 61, 49164, 248, 49154, 61, 49160, 248, 49158, 61, 49267, 248, 49163, 61, 49236, 248, 49194,
		61, 49163, 248, 49155, 61, 49207, 248, 49159, 61, 49161, 248, 49157, 61, 49191, 248, 49159, 61, 49181, 248, 49233, 61, 49163,
		248, 49155, 61, 49198, 248, 61, 49164, 248, 49154, 61, 49179, 248, 49171, 61, 49175, 248, 49191, 61, 248, 49166, 61, 49174,
		248, 49302, 61, 49153, 560, 49238, 474, 49192, 61, 49204, 474, 49162, 61, 49245, 474, 49153, 61, 49281, 474, 49165, 61, 49328,
		474, 49182, 61, 49181, 556, 49249, 61, 415, 35, 49181, 415, 49247, 860, 49279, 415, 49391, 561, 49167, 415, 49277, 555, 49153,
		560
	};

	std::unique_ptr<raw_record_table> table;
	detail::run_length_decode(rlestage1.begin(), rlestage1.end(), table->stage1.begin());
	detail::run_length_decode(rlestage2.begin(), rlestage2.end(), table->stage2.begin());
	return table;
}

} // namespace lug::unicode"

#endif
